/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.plugtree.drools;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author esteban
 */
public class ClassListHelper {

    private static List<String> classes;

    public static List<String> getClasses() {
        if (classes == null) {
            classes = new ArrayList<String>();
            classes.add("java.applet.Applet");
            classes.add("java.applet.AppletContext");
            classes.add("java.applet.AppletStub");
            classes.add("java.applet.AudioClip");
            classes.add("java.awt.ActiveEvent");
            classes.add("java.awt.Adjustable");
            classes.add("java.awt.AlphaComposite");
            classes.add("java.awt.AttributeValue");
            classes.add("java.awt.AWTError");
            classes.add("java.awt.AWTEvent");
            classes.add("java.awt.AWTEventMulticaster");
            classes.add("java.awt.AWTException");
            classes.add("java.awt.AWTKeyStroke");
            classes.add("java.awt.AWTPermission");
            classes.add("java.awt.BasicStroke");
            classes.add("java.awt.BorderLayout");
            classes.add("java.awt.BufferCapabilities");
            classes.add("java.awt.Button");
            classes.add("java.awt.Canvas");
            classes.add("java.awt.CardLayout");
            classes.add("java.awt.Checkbox");
            classes.add("java.awt.CheckboxGroup");
            classes.add("java.awt.CheckboxMenuItem");
            classes.add("java.awt.Choice");
            classes.add("java.awt.color.CMMException");
            classes.add("java.awt.color.ColorSpace");
            classes.add("java.awt.color.ICC_ColorSpace");
            classes.add("java.awt.color.ICC_Profile");
            classes.add("java.awt.color.ICC_ProfileGray");
            classes.add("java.awt.color.ICC_ProfileRGB");
            classes.add("java.awt.color.ProfileDataException");
            classes.add("java.awt.Color");
            classes.add("java.awt.ColorPaintContext");
            classes.add("java.awt.Component");
            classes.add("java.awt.ComponentOrientation");
            classes.add("java.awt.Composite");
            classes.add("java.awt.CompositeContext");
            classes.add("java.awt.Conditional");
            classes.add("java.awt.Container");
            classes.add("java.awt.ContainerOrderFocusTraversalPolicy");
            classes.add("java.awt.Cursor");
            classes.add("java.awt.datatransfer.Clipboard");
            classes.add("java.awt.datatransfer.ClipboardOwner");
            classes.add("java.awt.datatransfer.DataFlavor");
            classes.add("java.awt.datatransfer.FlavorEvent");
            classes.add("java.awt.datatransfer.FlavorListener");
            classes.add("java.awt.datatransfer.FlavorMap");
            classes.add("java.awt.datatransfer.FlavorTable");
            classes.add("java.awt.datatransfer.MimeType");
            classes.add("java.awt.datatransfer.MimeTypeParameterList");
            classes.add("java.awt.datatransfer.MimeTypeParseException");
            classes.add("java.awt.datatransfer.StringSelection");
            classes.add("java.awt.datatransfer.SystemFlavorMap");
            classes.add("java.awt.datatransfer.Transferable");
            classes.add("java.awt.datatransfer.UnsupportedFlavorException");
            classes.add("java.awt.DefaultFocusTraversalPolicy");
            classes.add("java.awt.DefaultKeyboardFocusManager");
            classes.add("java.awt.Desktop");
            classes.add("java.awt.Dialog");
            classes.add("java.awt.Dimension");
            classes.add("java.awt.DisplayMode");
            classes.add("java.awt.dnd.Autoscroll");
            classes.add("java.awt.dnd.DnDConstants");
            classes.add("java.awt.dnd.DnDEventMulticaster");
            classes.add("java.awt.dnd.DragGestureEvent");
            classes.add("java.awt.dnd.DragGestureListener");
            classes.add("java.awt.dnd.DragGestureRecognizer");
            classes.add("java.awt.dnd.DragSourceAdapter");
            classes.add("java.awt.dnd.DragSource");
            classes.add("java.awt.dnd.DragSourceContext");
            classes.add("java.awt.dnd.DragSourceDragEvent");
            classes.add("java.awt.dnd.DragSourceDropEvent");
            classes.add("java.awt.dnd.DragSourceEvent");
            classes.add("java.awt.dnd.DragSourceListener");
            classes.add("java.awt.dnd.DragSourceMotionListener");
            classes.add("java.awt.dnd.DropTargetAdapter");
            classes.add("java.awt.dnd.DropTarget");
            classes.add("java.awt.dnd.DropTargetContext");
            classes.add("java.awt.dnd.DropTargetDragEvent");
            classes.add("java.awt.dnd.DropTargetDropEvent");
            classes.add("java.awt.dnd.DropTargetEvent");
            classes.add("java.awt.dnd.DropTargetListener");
            classes.add("java.awt.dnd.InvalidDnDOperationException");
            classes.add("java.awt.dnd.MouseDragGestureRecognizer");
            classes.add("java.awt.dnd.peer.DragSourceContextPeer");
            classes.add("java.awt.dnd.peer.DropTargetContextPeer");
            classes.add("java.awt.dnd.peer.DropTargetPeer");
            classes.add("java.awt.dnd.SerializationTester");
            classes.add("java.awt.event.ActionEvent");
            classes.add("java.awt.event.ActionListener");
            classes.add("java.awt.event.AdjustmentEvent");
            classes.add("java.awt.event.AdjustmentListener");
            classes.add("java.awt.event.AWTEventListener");
            classes.add("java.awt.event.AWTEventListenerProxy");
            classes.add("java.awt.event.ComponentAdapter");
            classes.add("java.awt.event.ComponentEvent");
            classes.add("java.awt.event.ComponentListener");
            classes.add("java.awt.event.ContainerAdapter");
            classes.add("java.awt.event.ContainerEvent");
            classes.add("java.awt.event.ContainerListener");
            classes.add("java.awt.event.FocusAdapter");
            classes.add("java.awt.event.FocusEvent");
            classes.add("java.awt.event.FocusListener");
            classes.add("java.awt.event.HierarchyBoundsAdapter");
            classes.add("java.awt.event.HierarchyBoundsListener");
            classes.add("java.awt.event.HierarchyEvent");
            classes.add("java.awt.event.HierarchyListener");
            classes.add("java.awt.event.InputEvent");
            classes.add("java.awt.event.InputMethodEvent");
            classes.add("java.awt.event.InputMethodListener");
            classes.add("java.awt.event.InvocationEvent");
            classes.add("java.awt.event.ItemEvent");
            classes.add("java.awt.event.ItemListener");
            classes.add("java.awt.event.KeyAdapter");
            classes.add("java.awt.event.KeyEvent");
            classes.add("java.awt.event.KeyListener");
            classes.add("java.awt.event.MouseAdapter");
            classes.add("java.awt.event.MouseEvent");
            classes.add("java.awt.event.MouseListener");
            classes.add("java.awt.event.MouseMotionAdapter");
            classes.add("java.awt.event.MouseMotionListener");
            classes.add("java.awt.event.MouseWheelEvent");
            classes.add("java.awt.event.MouseWheelListener");
            classes.add("java.awt.event.NativeLibLoader");
            classes.add("java.awt.event.PaintEvent");
            classes.add("java.awt.event.TextEvent");
            classes.add("java.awt.event.TextListener");
            classes.add("java.awt.event.WindowAdapter");
            classes.add("java.awt.event.WindowEvent");
            classes.add("java.awt.event.WindowFocusListener");
            classes.add("java.awt.event.WindowListener");
            classes.add("java.awt.event.WindowStateListener");
            classes.add("java.awt.Event");
            classes.add("java.awt.EventDispatchThread");
            classes.add("java.awt.EventFilter");
            classes.add("java.awt.EventQueue");
            classes.add("java.awt.EventQueueItem");
            classes.add("java.awt.FileDialog");
            classes.add("java.awt.FlowLayout");
            classes.add("java.awt.FocusManager");
            classes.add("java.awt.FocusTraversalPolicy");
            classes.add("java.awt.font.CharArrayIterator");
            classes.add("java.awt.font.FontRenderContext");
            classes.add("java.awt.font.GlyphJustificationInfo");
            classes.add("java.awt.font.GlyphMetrics");
            classes.add("java.awt.font.GlyphVector");
            classes.add("java.awt.font.GraphicAttribute");
            classes.add("java.awt.font.ImageGraphicAttribute");
            classes.add("java.awt.font.LayoutPath");
            classes.add("java.awt.font.LineBreakMeasurer");
            classes.add("java.awt.font.LineMetrics");
            classes.add("java.awt.font.MultipleMaster");
            classes.add("java.awt.font.NumericShaper");
            classes.add("java.awt.font.OpenType");
            classes.add("java.awt.font.ShapeGraphicAttribute");
            classes.add("java.awt.font.StyledParagraph");
            classes.add("java.awt.font.TextAttribute");
            classes.add("java.awt.font.TextHitInfo");
            classes.add("java.awt.font.TextJustifier");
            classes.add("java.awt.font.TextLayout");
            classes.add("java.awt.font.TextLine");
            classes.add("java.awt.font.TextMeasurer");
            classes.add("java.awt.font.TransformAttribute");
            classes.add("java.awt.Font");
            classes.add("java.awt.FontFormatException");
            classes.add("java.awt.FontMetrics");
            classes.add("java.awt.Frame");
            classes.add("java.awt.geom.AffineTransform");
            classes.add("java.awt.geom.Arc2D");
            classes.add("java.awt.geom.ArcIterator");
            classes.add("java.awt.geom.Area");
            classes.add("java.awt.geom.AreaIterator");
            classes.add("java.awt.geom.CubicCurve2D");
            classes.add("java.awt.geom.CubicIterator");
            classes.add("java.awt.geom.Dimension2D");
            classes.add("java.awt.geom.Ellipse2D");
            classes.add("java.awt.geom.EllipseIterator");
            classes.add("java.awt.geom.FlatteningPathIterator");
            classes.add("java.awt.geom.GeneralPath");
            classes.add("java.awt.geom.IllegalPathStateException");
            classes.add("java.awt.geom.Line2D");
            classes.add("java.awt.geom.LineIterator");
            classes.add("java.awt.geom.NoninvertibleTransformException");
            classes.add("java.awt.geom.Path2D");
            classes.add("java.awt.geom.PathIterator");
            classes.add("java.awt.geom.Point2D");
            classes.add("java.awt.geom.QuadCurve2D");
            classes.add("java.awt.geom.QuadIterator");
            classes.add("java.awt.geom.Rectangle2D");
            classes.add("java.awt.geom.RectangularShape");
            classes.add("java.awt.geom.RectIterator");
            classes.add("java.awt.geom.RoundRectangle2D");
            classes.add("java.awt.geom.RoundRectIterator");
            classes.add("java.awt.GradientPaint");
            classes.add("java.awt.GradientPaintContext");
            classes.add("java.awt.Graphics2D");
            classes.add("java.awt.GraphicsCallback");
            classes.add("java.awt.Graphics");
            classes.add("java.awt.GraphicsConfigTemplate");
            classes.add("java.awt.GraphicsConfiguration");
            classes.add("java.awt.GraphicsDevice");
            classes.add("java.awt.GraphicsEnvironment");
            classes.add("java.awt.GridBagConstraints");
            classes.add("java.awt.GridBagLayout");
            classes.add("java.awt.GridBagLayoutInfo");
            classes.add("java.awt.GridLayout");
            classes.add("java.awt.HeadlessException");
            classes.add("java.awt.IllegalComponentStateException");
            classes.add("java.awt.im.InputContext");
            classes.add("java.awt.im.InputMethodHighlight");
            classes.add("java.awt.im.InputMethodRequests");
            classes.add("java.awt.im.InputSubset");
            classes.add("java.awt.im.spi.InputMethod");
            classes.add("java.awt.im.spi.InputMethodContext");
            classes.add("java.awt.im.spi.InputMethodDescriptor");
            classes.add("java.awt.image.AffineTransformOp");
            classes.add("java.awt.image.AreaAveragingScaleFilter");
            classes.add("java.awt.image.BandCombineOp");
            classes.add("java.awt.image.BandedSampleModel");
            classes.add("java.awt.image.BufferedImage");
            classes.add("java.awt.image.BufferedImageFilter");
            classes.add("java.awt.image.BufferedImageOp");
            classes.add("java.awt.image.BufferStrategy");
            classes.add("java.awt.image.ByteLookupTable");
            classes.add("java.awt.image.ColorConvertOp");
            classes.add("java.awt.image.ColorModel");
            classes.add("java.awt.image.ComponentColorModel");
            classes.add("java.awt.image.ComponentSampleModel");
            classes.add("java.awt.image.ConvolveOp");
            classes.add("java.awt.image.CropImageFilter");
            classes.add("java.awt.image.DataBufferByte");
            classes.add("java.awt.image.DataBuffer");
            classes.add("java.awt.image.DataBufferDouble");
            classes.add("java.awt.image.DataBufferFloat");
            classes.add("java.awt.image.DataBufferInt");
            classes.add("java.awt.image.DataBufferShort");
            classes.add("java.awt.image.DataBufferUShort");
            classes.add("java.awt.image.DirectColorModel");
            classes.add("java.awt.image.FilteredImageSource");
            classes.add("java.awt.image.ImageConsumer");
            classes.add("java.awt.image.ImageFilter");
            classes.add("java.awt.image.ImageObserver");
            classes.add("java.awt.image.ImageProducer");
            classes.add("java.awt.image.ImagingOpException");
            classes.add("java.awt.image.IndexColorModel");
            classes.add("java.awt.image.Kernel");
            classes.add("java.awt.image.LookupOp");
            classes.add("java.awt.image.LookupTable");
            classes.add("java.awt.image.MemoryImageSource");
            classes.add("java.awt.image.MultiPixelPackedSampleModel");
            classes.add("java.awt.image.PackedColorModel");
            classes.add("java.awt.image.PixelGrabber");
            classes.add("java.awt.image.PixelInterleavedSampleModel");
            classes.add("java.awt.image.Raster");
            classes.add("java.awt.image.RasterFormatException");
            classes.add("java.awt.image.RasterOp");
            classes.add("java.awt.image.renderable.ContextualRenderedImageFactory");
            classes.add("java.awt.image.renderable.ParameterBlock");
            classes.add("java.awt.image.renderable.RenderableImage");
            classes.add("java.awt.image.renderable.RenderableImageOp");
            classes.add("java.awt.image.renderable.RenderableImageProducer");
            classes.add("java.awt.image.renderable.RenderContext");
            classes.add("java.awt.image.renderable.RenderedImageFactory");
            classes.add("java.awt.image.RenderedImage");
            classes.add("java.awt.image.ReplicateScaleFilter");
            classes.add("java.awt.image.RescaleOp");
            classes.add("java.awt.image.RGBImageFilter");
            classes.add("java.awt.image.SampleModel");
            classes.add("java.awt.image.ShortLookupTable");
            classes.add("java.awt.image.SinglePixelPackedSampleModel");
            classes.add("java.awt.image.TileObserver");
            classes.add("java.awt.image.VolatileImage");
            classes.add("java.awt.image.WritableRaster");
            classes.add("java.awt.image.WritableRenderedImage");
            classes.add("java.awt.ImageCapabilities");
            classes.add("java.awt.Image");
            classes.add("java.awt.ImageMediaEntry");
            classes.add("java.awt.Insets");
            classes.add("java.awt.ItemSelectable");
            classes.add("java.awt.JobAttributes");
            classes.add("java.awt.KeyboardFocusManager");
            classes.add("java.awt.KeyEventDispatcher");
            classes.add("java.awt.KeyEventPostProcessor");
            classes.add("java.awt.Label");
            classes.add("java.awt.LayoutManager2");
            classes.add("java.awt.LayoutManager");
            classes.add("java.awt.LightweightDispatcher");
            classes.add("java.awt.LinearGradientPaint");
            classes.add("java.awt.LinearGradientPaintContext");
            classes.add("java.awt.List");
            classes.add("java.awt.MediaEntry");
            classes.add("java.awt.MediaTracker");
            classes.add("java.awt.MenuBar");
            classes.add("java.awt.Menu");
            classes.add("java.awt.MenuComponent");
            classes.add("java.awt.MenuContainer");
            classes.add("java.awt.MenuItem");
            classes.add("java.awt.MenuShortcut");
            classes.add("java.awt.ModalEventFilter");
            classes.add("java.awt.MouseInfo");
            classes.add("java.awt.MultipleGradientPaint");
            classes.add("java.awt.MultipleGradientPaintContext");
            classes.add("java.awt.MutableBoolean");
            classes.add("java.awt.PageAttributes");
            classes.add("java.awt.Paint");
            classes.add("java.awt.PaintContext");
            classes.add("java.awt.Panel");
            classes.add("java.awt.peer.ButtonPeer");
            classes.add("java.awt.peer.CanvasPeer");
            classes.add("java.awt.peer.CheckboxMenuItemPeer");
            classes.add("java.awt.peer.CheckboxPeer");
            classes.add("java.awt.peer.ChoicePeer");
            classes.add("java.awt.peer.ComponentPeer");
            classes.add("java.awt.peer.ContainerPeer");
            classes.add("java.awt.peer.DesktopPeer");
            classes.add("java.awt.peer.DialogPeer");
            classes.add("java.awt.peer.FileDialogPeer");
            classes.add("java.awt.peer.FontPeer");
            classes.add("java.awt.peer.FramePeer");
            classes.add("java.awt.peer.KeyboardFocusManagerPeer");
            classes.add("java.awt.peer.LabelPeer");
            classes.add("java.awt.peer.LightweightPeer");
            classes.add("java.awt.peer.ListPeer");
            classes.add("java.awt.peer.MenuBarPeer");
            classes.add("java.awt.peer.MenuComponentPeer");
            classes.add("java.awt.peer.MenuItemPeer");
            classes.add("java.awt.peer.MenuPeer");
            classes.add("java.awt.peer.MouseInfoPeer");
            classes.add("java.awt.peer.PanelPeer");
            classes.add("java.awt.peer.PopupMenuPeer");
            classes.add("java.awt.peer.RobotPeer");
            classes.add("java.awt.peer.ScrollbarPeer");
            classes.add("java.awt.peer.ScrollPanePeer");
            classes.add("java.awt.peer.SystemTrayPeer");
            classes.add("java.awt.peer.TextAreaPeer");
            classes.add("java.awt.peer.TextComponentPeer");
            classes.add("java.awt.peer.TextFieldPeer");
            classes.add("java.awt.peer.TrayIconPeer");
            classes.add("java.awt.peer.WindowPeer");
            classes.add("java.awt.PeerFixer");
            classes.add("java.awt.Point");
            classes.add("java.awt.PointerInfo");
            classes.add("java.awt.Polygon");
            classes.add("java.awt.PopupMenu");
            classes.add("java.awt.print.Book");
            classes.add("java.awt.print.Pageable");
            classes.add("java.awt.print.PageFormat");
            classes.add("java.awt.print.Paper");
            classes.add("java.awt.print.Printable");
            classes.add("java.awt.print.PrinterAbortException");
            classes.add("java.awt.print.PrinterException");
            classes.add("java.awt.print.PrinterGraphics");
            classes.add("java.awt.print.PrinterIOException");
            classes.add("java.awt.print.PrinterJob");
            classes.add("java.awt.PrintGraphics");
            classes.add("java.awt.PrintJob");
            classes.add("java.awt.Queue");
            classes.add("java.awt.RadialGradientPaint");
            classes.add("java.awt.RadialGradientPaintContext");
            classes.add("java.awt.Rectangle");
            classes.add("java.awt.RenderingHints");
            classes.add("java.awt.Robot");
            classes.add("java.awt.Scrollbar");
            classes.add("java.awt.ScrollPaneAdjustable");
            classes.add("java.awt.ScrollPane");
            classes.add("java.awt.SentEvent");
            classes.add("java.awt.SequencedEvent");
            classes.add("java.awt.Shape");
            classes.add("java.awt.SplashScreen");
            classes.add("java.awt.Stroke");
            classes.add("java.awt.SystemColor");
            classes.add("java.awt.SystemTray");
            classes.add("java.awt.TextArea");
            classes.add("java.awt.TextComponent");
            classes.add("java.awt.TextField");
            classes.add("java.awt.TexturePaint");
            classes.add("java.awt.TexturePaintContext");
            classes.add("java.awt.Toolkit");
            classes.add("java.awt.Transparency");
            classes.add("java.awt.TrayIcon");
            classes.add("java.awt.VKCollection");
            classes.add("java.awt.Window");
            classes.add("java.beans.AppletInitializer");
            classes.add("java.beans.ArrayPersistenceDelegate");
            classes.add("java.beans.beancontext.BeanContextChild");
            classes.add("java.beans.beancontext.BeanContextChildComponentProxy");
            classes.add("java.beans.beancontext.BeanContextChildSupport");
            classes.add("java.beans.beancontext.BeanContext");
            classes.add("java.beans.beancontext.BeanContextContainerProxy");
            classes.add("java.beans.beancontext.BeanContextEvent");
            classes.add("java.beans.beancontext.BeanContextMembershipEvent");
            classes.add("java.beans.beancontext.BeanContextMembershipListener");
            classes.add("java.beans.beancontext.BeanContextProxy");
            classes.add("java.beans.beancontext.BeanContextServiceAvailableEvent");
            classes.add("java.beans.beancontext.BeanContextServiceProviderBeanInfo");
            classes.add("java.beans.beancontext.BeanContextServiceProvider");
            classes.add("java.beans.beancontext.BeanContextServiceRevokedEvent");
            classes.add("java.beans.beancontext.BeanContextServiceRevokedListener");
            classes.add("java.beans.beancontext.BeanContextServices");
            classes.add("java.beans.beancontext.BeanContextServicesListener");
            classes.add("java.beans.beancontext.BeanContextServicesSupport");
            classes.add("java.beans.beancontext.BeanContextSupport");
            classes.add("java.beans.BeanDescriptor");
            classes.add("java.beans.BeanInfo");
            classes.add("java.beans.BeansAppletContext");
            classes.add("java.beans.BeansAppletStub");
            classes.add("java.beans.Beans");
            classes.add("java.beans.ConstructorProperties");
            classes.add("java.beans.Customizer");
            classes.add("java.beans.DefaultPersistenceDelegate");
            classes.add("java.beans.DesignMode");
            classes.add("java.beans.Encoder");
            classes.add("java.beans.EnumPersistenceDelegate");
            classes.add("java.beans.EventHandler");
            classes.add("java.beans.EventSetDescriptor");
            classes.add("java.beans.ExceptionListener");
            classes.add("java.beans.Expression");
            classes.add("java.beans.FeatureDescriptor");
            classes.add("java.beans.GenericBeanInfo");
            classes.add("java.beans.IndexedPropertyChangeEvent");
            classes.add("java.beans.IndexedPropertyDescriptor");
            classes.add("java.beans.IntrospectionException");
            classes.add("java.beans.Introspector");
            classes.add("java.beans.java_awt_BorderLayout_PersistenceDelegate");
            classes.add("java.beans.java_awt_CardLayout_PersistenceDelegate");
            classes.add("java.beans.java_awt_Choice_PersistenceDelegate");
            classes.add("java.beans.java_awt_Component_PersistenceDelegate");
            classes.add("java.beans.java_awt_Container_PersistenceDelegate");
            classes.add("java.beans.java_awt_Dimension_PersistenceDelegate");
            classes.add("java.beans.java_awt_font_TextAttribute_PersistenceDelegate");
            classes.add("java.beans.java_awt_GridBagConstraints_PersistenceDelegate");
            classes.add("java.beans.java_awt_GridBagLayout_PersistenceDelegate");
            classes.add("java.beans.java_awt_Insets_PersistenceDelegate");
            classes.add("java.beans.java_awt_List_PersistenceDelegate");
            classes.add("java.beans.java_awt_MenuBar_PersistenceDelegate");
            classes.add("java.beans.java_awt_Menu_PersistenceDelegate");
            classes.add("java.beans.java_awt_MenuShortcut_PersistenceDelegate");
            classes.add("java.beans.java_awt_Point_PersistenceDelegate");
            classes.add("java.beans.java_awt_Rectangle_PersistenceDelegate");
            classes.add("java.beans.java_awt_SystemColor_PersistenceDelegate");
            classes.add("java.beans.java_beans_beancontext_BeanContextSupport_PersistenceDelegate");
            classes.add("java.beans.java_lang_Class_PersistenceDelegate");
            classes.add("java.beans.java_lang_reflect_Field_PersistenceDelegate");
            classes.add("java.beans.java_lang_reflect_Method_PersistenceDelegate");
            classes.add("java.beans.java_lang_String_PersistenceDelegate");
            classes.add("java.beans.java_util_AbstractCollection_PersistenceDelegate");
            classes.add("java.beans.java_util_AbstractList_PersistenceDelegate");
            classes.add("java.beans.java_util_AbstractMap_PersistenceDelegate");
            classes.add("java.beans.java_util_Collection_PersistenceDelegate");
            classes.add("java.beans.java_util_Collections");
            classes.add("java.beans.java_util_Hashtable_PersistenceDelegate");
            classes.add("java.beans.java_util_List_PersistenceDelegate");
            classes.add("java.beans.java_util_Map_PersistenceDelegate");
            classes.add("java.beans.javax_swing_border_MatteBorder_PersistenceDelegate");
            classes.add("java.beans.javax_swing_Box_PersistenceDelegate");
            classes.add("java.beans.javax_swing_DefaultComboBoxModel_PersistenceDelegate");
            classes.add("java.beans.javax_swing_DefaultListModel_PersistenceDelegate");
            classes.add("java.beans.javax_swing_JFrame_PersistenceDelegate");
            classes.add("java.beans.javax_swing_JMenu_PersistenceDelegate");
            classes.add("java.beans.javax_swing_JTabbedPane_PersistenceDelegate");
            classes.add("java.beans.javax_swing_ToolTipManager_PersistenceDelegate");
            classes.add("java.beans.javax_swing_tree_DefaultMutableTreeNode_PersistenceDelegate");
            classes.add("java.beans.MetaData");
            classes.add("java.beans.MethodDescriptor");
            classes.add("java.beans.NameGenerator");
            classes.add("java.beans.NullPersistenceDelegate");
            classes.add("java.beans.ObjectInputStreamWithLoader");
            classes.add("java.beans.ParameterDescriptor");
            classes.add("java.beans.PersistenceDelegate");
            classes.add("java.beans.PrimitivePersistenceDelegate");
            classes.add("java.beans.PropertyChangeEvent");
            classes.add("java.beans.PropertyChangeListener");
            classes.add("java.beans.PropertyChangeListenerProxy");
            classes.add("java.beans.PropertyChangeSupport");
            classes.add("java.beans.PropertyDescriptor");
            classes.add("java.beans.PropertyEditor");
            classes.add("java.beans.PropertyEditorManager");
            classes.add("java.beans.PropertyEditorSupport");
            classes.add("java.beans.PropertyVetoException");
            classes.add("java.beans.ProxyPersistenceDelegate");
            classes.add("java.beans.ReflectionUtils");
            classes.add("java.beans.SimpleBeanInfo");
            classes.add("java.beans.Statement");
            classes.add("java.beans.StaticFieldsPersistenceDelegate");
            classes.add("java.beans.sun_swing_PrintColorUIResource_PersistenceDelegate");
            classes.add("java.beans.VetoableChangeListener");
            classes.add("java.beans.VetoableChangeListenerProxy");
            classes.add("java.beans.VetoableChangeSupport");
            classes.add("java.beans.Visibility");
            classes.add("java.beans.XMLDecoder");
            classes.add("java.beans.XMLEncoder");
            classes.add("java.io.Bits");
            classes.add("java.io.BufferedInputStream");
            classes.add("java.io.BufferedOutputStream");
            classes.add("java.io.BufferedReader");
            classes.add("java.io.BufferedWriter");
            classes.add("java.io.ByteArrayInputStream");
            classes.add("java.io.ByteArrayOutputStream");
            classes.add("java.io.CharArrayReader");
            classes.add("java.io.CharArrayWriter");
            classes.add("java.io.CharConversionException");
            classes.add("java.io.Closeable");
            classes.add("java.io.Console");
            classes.add("java.io.DataInput");
            classes.add("java.io.DataInputStream");
            classes.add("java.io.DataOutput");
            classes.add("java.io.DataOutputStream");
            classes.add("java.io.DeleteOnExitHook");
            classes.add("java.io.EOFException");
            classes.add("java.io.ExpiringCache");
            classes.add("java.io.Externalizable");
            classes.add("java.io.File");
            classes.add("java.io.FileDescriptor");
            classes.add("java.io.FileFilter");
            classes.add("java.io.FileInputStream");
            classes.add("java.io.FilenameFilter");
            classes.add("java.io.FileNotFoundException");
            classes.add("java.io.FileOutputStream");
            classes.add("java.io.FilePermission");
            classes.add("java.io.FilePermissionCollection");
            classes.add("java.io.FileReader");
            classes.add("java.io.FileSystem");
            classes.add("java.io.FileWriter");
            classes.add("java.io.FilterInputStream");
            classes.add("java.io.FilterOutputStream");
            classes.add("java.io.FilterReader");
            classes.add("java.io.FilterWriter");
            classes.add("java.io.Flushable");
            classes.add("java.io.InputStream");
            classes.add("java.io.InputStreamReader");
            classes.add("java.io.InterruptedIOException");
            classes.add("java.io.InvalidClassException");
            classes.add("java.io.InvalidObjectException");
            classes.add("java.io.IOError");
            classes.add("java.io.IOException");
            classes.add("java.io.LineNumberInputStream");
            classes.add("java.io.LineNumberReader");
            classes.add("java.io.NotActiveException");
            classes.add("java.io.NotSerializableException");
            classes.add("java.io.ObjectInput");
            classes.add("java.io.ObjectInputStream");
            classes.add("java.io.ObjectInputValidation");
            classes.add("java.io.ObjectOutput");
            classes.add("java.io.ObjectOutputStream");
            classes.add("java.io.ObjectStreamClass");
            classes.add("java.io.ObjectStreamConstants");
            classes.add("java.io.ObjectStreamException");
            classes.add("java.io.ObjectStreamField");
            classes.add("java.io.OptionalDataException");
            classes.add("java.io.OutputStream");
            classes.add("java.io.OutputStreamWriter");
            classes.add("java.io.PipedInputStream");
            classes.add("java.io.PipedOutputStream");
            classes.add("java.io.PipedReader");
            classes.add("java.io.PipedWriter");
            classes.add("java.io.PrintStream");
            classes.add("java.io.PrintWriter");
            classes.add("java.io.PushbackInputStream");
            classes.add("java.io.PushbackReader");
            classes.add("java.io.RandomAccessFile");
            classes.add("java.io.Reader");
            classes.add("java.io.SequenceInputStream");
            classes.add("java.io.SerialCallbackContext");
            classes.add("java.io.Serializable");
            classes.add("java.io.SerializablePermission");
            classes.add("java.io.StreamCorruptedException");
            classes.add("java.io.StreamTokenizer");
            classes.add("java.io.StringBufferInputStream");
            classes.add("java.io.StringReader");
            classes.add("java.io.StringWriter");
            classes.add("java.io.SyncFailedException");
            classes.add("java.io.UnixFileSystem");
            classes.add("java.io.UnsupportedEncodingException");
            classes.add("java.io.UTFDataFormatException");
            classes.add("java.io.WriteAbortedException");
            classes.add("java.io.Writer");
            classes.add("java.lang.AbstractMethodError");
            classes.add("java.lang.AbstractStringBuilder");
            classes.add("java.lang.annotation.Annotation");
            classes.add("java.lang.annotation.AnnotationFormatError");
            classes.add("java.lang.annotation.AnnotationTypeMismatchException");
            classes.add("java.lang.annotation.Documented");
            classes.add("java.lang.annotation.ElementType");
            classes.add("java.lang.annotation.IncompleteAnnotationException");
            classes.add("java.lang.annotation.Inherited");
            classes.add("java.lang.annotation.Retention");
            classes.add("java.lang.annotation.RetentionPolicy");
            classes.add("java.lang.annotation.Target");
            classes.add("java.lang.Appendable");
            classes.add("java.lang.ApplicationShutdownHooks");
            classes.add("java.lang.ArithmeticException");
            classes.add("java.lang.ArrayIndexOutOfBoundsException");
            classes.add("java.lang.ArrayStoreException");
            classes.add("java.lang.AssertionError");
            classes.add("java.lang.AssertionStatusDirectives");
            classes.add("java.lang.Boolean");
            classes.add("java.lang.Byte");
            classes.add("java.lang.Character");
            classes.add("java.lang.CharacterData00");
            classes.add("java.lang.CharacterData01");
            classes.add("java.lang.CharacterData02");
            classes.add("java.lang.CharacterData0E");
            classes.add("java.lang.CharacterDataLatin1");
            classes.add("java.lang.CharacterDataPrivateUse");
            classes.add("java.lang.CharacterDataUndefined");
            classes.add("java.lang.CharSequence");
            classes.add("java.lang.ClassCastException");
            classes.add("java.lang.ClassCircularityError");
            classes.add("java.lang.Class");
            classes.add("java.lang.ClassFormatError");
            classes.add("java.lang.ClassLoader");
            classes.add("java.lang.ClassNotFoundException");
            classes.add("java.lang.Cloneable");
            classes.add("java.lang.CloneNotSupportedException");
            classes.add("java.lang.Comparable");
            classes.add("java.lang.Compiler");
            classes.add("java.lang.ConditionalSpecialCasing");
            classes.add("java.lang.Deprecated");
            classes.add("java.lang.Double");
            classes.add("java.lang.Enum");
            classes.add("java.lang.EnumConstantNotPresentException");
            classes.add("java.lang.Error");
            classes.add("java.lang.Exception");
            classes.add("java.lang.ExceptionInInitializerError");
            classes.add("java.lang.Float");
            classes.add("java.lang.IllegalAccessError");
            classes.add("java.lang.IllegalAccessException");
            classes.add("java.lang.IllegalArgumentException");
            classes.add("java.lang.IllegalMonitorStateException");
            classes.add("java.lang.IllegalStateException");
            classes.add("java.lang.IllegalThreadStateException");
            classes.add("java.lang.IncompatibleClassChangeError");
            classes.add("java.lang.IndexOutOfBoundsException");
            classes.add("java.lang.InheritableThreadLocal");
            classes.add("java.lang.InstantiationError");
            classes.add("java.lang.InstantiationException");
            classes.add("java.lang.instrument.ClassDefinition");
            classes.add("java.lang.instrument.ClassFileTransformer");
            classes.add("java.lang.instrument.IllegalClassFormatException");
            classes.add("java.lang.instrument.Instrumentation");
            classes.add("java.lang.instrument.UnmodifiableClassException");
            classes.add("java.lang.Integer");
            classes.add("java.lang.InternalError");
            classes.add("java.lang.InterruptedException");
            classes.add("java.lang.Iterable");
            classes.add("java.lang.LinkageError");
            classes.add("java.lang.Long");
            classes.add("java.lang.management.ClassLoadingMXBean");
            classes.add("java.lang.management.CompilationMXBean");
            classes.add("java.lang.management.GarbageCollectorMXBean");
            classes.add("java.lang.management.LockInfo");
            classes.add("java.lang.management.ManagementFactory");
            classes.add("java.lang.management.ManagementPermission");
            classes.add("java.lang.management.MemoryManagerMXBean");
            classes.add("java.lang.management.MemoryMXBean");
            classes.add("java.lang.management.MemoryNotificationInfo");
            classes.add("java.lang.management.MemoryPoolMXBean");
            classes.add("java.lang.management.MemoryType");
            classes.add("java.lang.management.MemoryUsage");
            classes.add("java.lang.management.MonitorInfo");
            classes.add("java.lang.management.OperatingSystemMXBean");
            classes.add("java.lang.management.RuntimeMXBean");
            classes.add("java.lang.management.ThreadInfo");
            classes.add("java.lang.management.ThreadMXBean");
            classes.add("java.lang.Math");
            classes.add("java.lang.NegativeArraySizeException");
            classes.add("java.lang.NoClassDefFoundError");
            classes.add("java.lang.NoSuchFieldError");
            classes.add("java.lang.NoSuchFieldException");
            classes.add("java.lang.NoSuchMethodError");
            classes.add("java.lang.NoSuchMethodException");
            classes.add("java.lang.NullPointerException");
            classes.add("java.lang.Number");
            classes.add("java.lang.NumberFormatException");
            classes.add("java.lang.Object");
            classes.add("java.lang.OutOfMemoryError");
            classes.add("java.lang.Override");
            classes.add("java.lang.Package");
            classes.add("java.lang.ProcessBuilder");
            classes.add("java.lang.Process");
            classes.add("java.lang.ProcessEnvironment");
            classes.add("java.lang.ProcessImpl");
            classes.add("java.lang.Readable");
            classes.add("java.lang.ref.Finalizer");
            classes.add("java.lang.ref.FinalReference");
            classes.add("java.lang.ref.PhantomReference");
            classes.add("java.lang.ref.Reference");
            classes.add("java.lang.ref.ReferenceQueue");
            classes.add("java.lang.ref.SoftReference");
            classes.add("java.lang.ref.WeakReference");
            classes.add("java.lang.reflect.AccessibleObject");
            classes.add("java.lang.reflect.AnnotatedElement");
            classes.add("java.lang.reflect.Array");
            classes.add("java.lang.reflect.Constructor");
            classes.add("java.lang.reflect.Field");
            classes.add("java.lang.reflect.GenericArrayType");
            classes.add("java.lang.reflect.GenericDeclaration");
            classes.add("java.lang.reflect.GenericSignatureFormatError");
            classes.add("java.lang.reflect.InvocationHandler");
            classes.add("java.lang.reflect.InvocationTargetException");
            classes.add("java.lang.reflect.MalformedParameterizedTypeException");
            classes.add("java.lang.reflect.Member");
            classes.add("java.lang.reflect.Method");
            classes.add("java.lang.reflect.Modifier");
            classes.add("java.lang.reflect.ParameterizedType");
            classes.add("java.lang.reflect.Proxy");
            classes.add("java.lang.reflect.ReflectAccess");
            classes.add("java.lang.reflect.ReflectPermission");
            classes.add("java.lang.reflect.Type");
            classes.add("java.lang.reflect.TypeVariable");
            classes.add("java.lang.reflect.UndeclaredThrowableException");
            classes.add("java.lang.reflect.WildcardType");
            classes.add("java.lang.Runnable");
            classes.add("java.lang.Runtime");
            classes.add("java.lang.RuntimeException");
            classes.add("java.lang.RuntimePermission");
            classes.add("java.lang.SecurityException");
            classes.add("java.lang.SecurityManager");
            classes.add("java.lang.Short");
            classes.add("java.lang.Shutdown");
            classes.add("java.lang.StackOverflowError");
            classes.add("java.lang.StackTraceElement");
            classes.add("java.lang.StrictMath");
            classes.add("java.lang.StringBuffer");
            classes.add("java.lang.StringBuilder");
            classes.add("java.lang.String");
            classes.add("java.lang.StringCoding");
            classes.add("java.lang.StringIndexOutOfBoundsException");
            classes.add("java.lang.StringValue");
            classes.add("java.lang.SuppressWarnings");
            classes.add("java.lang.System");
            classes.add("java.lang.SystemClassLoaderAction");
            classes.add("java.lang.Terminator");
            classes.add("java.lang.Thread");
            classes.add("java.lang.ThreadDeath");
            classes.add("java.lang.ThreadGroup");
            classes.add("java.lang.ThreadLocal");
            classes.add("java.lang.Throwable");
            classes.add("java.lang.TypeNotPresentException");
            classes.add("java.lang.UNIXProcess");
            classes.add("java.lang.UnknownError");
            classes.add("java.lang.UnsatisfiedLinkError");
            classes.add("java.lang.UnsupportedClassVersionError");
            classes.add("java.lang.UnsupportedOperationException");
            classes.add("java.lang.VerifyError");
            classes.add("java.lang.VirtualMachineError");
            classes.add("java.lang.Void");
            classes.add("java.math.BigDecimal");
            classes.add("java.math.BigInteger");
            classes.add("java.math.BitSieve");
            classes.add("java.math.MathContext");
            classes.add("java.math.MutableBigInteger");
            classes.add("java.math.RoundingMode");
            classes.add("java.math.SignedMutableBigInteger");
            classes.add("java.net.Authenticator");
            classes.add("java.net.BindException");
            classes.add("java.net.CacheRequest");
            classes.add("java.net.CacheResponse");
            classes.add("java.net.ConnectException");
            classes.add("java.net.ContentHandler");
            classes.add("java.net.ContentHandlerFactory");
            classes.add("java.net.CookieHandler");
            classes.add("java.net.CookieManager");
            classes.add("java.net.CookiePolicy");
            classes.add("java.net.CookieStore");
            classes.add("java.net.DatagramPacket");
            classes.add("java.net.DatagramSocket");
            classes.add("java.net.DatagramSocketImpl");
            classes.add("java.net.DatagramSocketImplFactory");
            classes.add("java.net.FactoryURLClassLoader");
            classes.add("java.net.FileNameMap");
            classes.add("java.net.HttpCookie");
            classes.add("java.net.HttpRetryException");
            classes.add("java.net.HttpURLConnection");
            classes.add("java.net.IDN");
            classes.add("java.net.Inet4Address");
            classes.add("java.net.Inet4AddressImpl");
            classes.add("java.net.Inet6Address");
            classes.add("java.net.Inet6AddressImpl");
            classes.add("java.net.InetAddress");
            classes.add("java.net.InetAddressContainer");
            classes.add("java.net.InetAddressImpl");
            classes.add("java.net.InetAddressImplFactory");
            classes.add("java.net.InetSocketAddress");
            classes.add("java.net.InterfaceAddress");
            classes.add("java.net.JarURLConnection");
            classes.add("java.net.MalformedURLException");
            classes.add("java.net.MulticastSocket");
            classes.add("java.net.NetPermission");
            classes.add("java.net.NetworkInterface");
            classes.add("java.net.NoRouteToHostException");
            classes.add("java.net.Parts");
            classes.add("java.net.PasswordAuthentication");
            classes.add("java.net.PlainDatagramSocketImpl");
            classes.add("java.net.PlainSocketImpl");
            classes.add("java.net.PortUnreachableException");
            classes.add("java.net.ProtocolException");
            classes.add("java.net.Proxy");
            classes.add("java.net.ProxySelector");
            classes.add("java.net.ResponseCache");
            classes.add("java.net.SdpSocketImpl");
            classes.add("java.net.SecureCacheResponse");
            classes.add("java.net.ServerSocket");
            classes.add("java.net.SocketAddress");
            classes.add("java.net.Socket");
            classes.add("java.net.SocketException");
            classes.add("java.net.SocketImpl");
            classes.add("java.net.SocketImplFactory");
            classes.add("java.net.SocketInputStream");
            classes.add("java.net.SocketOptions");
            classes.add("java.net.SocketOutputStream");
            classes.add("java.net.SocketPermission");
            classes.add("java.net.SocketPermissionCollection");
            classes.add("java.net.SocketTimeoutException");
            classes.add("java.net.SocksConsts");
            classes.add("java.net.SocksSocketImpl");
            classes.add("java.net.UnknownContentHandler");
            classes.add("java.net.UnknownHostException");
            classes.add("java.net.UnknownServiceException");
            classes.add("java.net.URI");
            classes.add("java.net.URISyntaxException");
            classes.add("java.net.URL");
            classes.add("java.net.URLClassLoader");
            classes.add("java.net.URLConnection");
            classes.add("java.net.URLDecoder");
            classes.add("java.net.URLEncoder");
            classes.add("java.net.URLStreamHandler");
            classes.add("java.net.URLStreamHandlerFactory");
            classes.add("java.nio.Bits");
            classes.add("java.nio.Buffer");
            classes.add("java.nio.BufferOverflowException");
            classes.add("java.nio.BufferUnderflowException");
            classes.add("java.nio.ByteBufferAsCharBufferB");
            classes.add("java.nio.ByteBufferAsCharBufferL");
            classes.add("java.nio.ByteBufferAsCharBufferRB");
            classes.add("java.nio.ByteBufferAsCharBufferRL");
            classes.add("java.nio.ByteBufferAsDoubleBufferB");
            classes.add("java.nio.ByteBufferAsDoubleBufferL");
            classes.add("java.nio.ByteBufferAsDoubleBufferRB");
            classes.add("java.nio.ByteBufferAsDoubleBufferRL");
            classes.add("java.nio.ByteBufferAsFloatBufferB");
            classes.add("java.nio.ByteBufferAsFloatBufferL");
            classes.add("java.nio.ByteBufferAsFloatBufferRB");
            classes.add("java.nio.ByteBufferAsFloatBufferRL");
            classes.add("java.nio.ByteBufferAsIntBufferB");
            classes.add("java.nio.ByteBufferAsIntBufferL");
            classes.add("java.nio.ByteBufferAsIntBufferRB");
            classes.add("java.nio.ByteBufferAsIntBufferRL");
            classes.add("java.nio.ByteBufferAsLongBufferB");
            classes.add("java.nio.ByteBufferAsLongBufferL");
            classes.add("java.nio.ByteBufferAsLongBufferRB");
            classes.add("java.nio.ByteBufferAsLongBufferRL");
            classes.add("java.nio.ByteBufferAsShortBufferB");
            classes.add("java.nio.ByteBufferAsShortBufferL");
            classes.add("java.nio.ByteBufferAsShortBufferRB");
            classes.add("java.nio.ByteBufferAsShortBufferRL");
            classes.add("java.nio.ByteBuffer");
            classes.add("java.nio.ByteOrder");
            classes.add("java.nio.channels.AlreadyConnectedException");
            classes.add("java.nio.channels.AsynchronousCloseException");
            classes.add("java.nio.channels.ByteChannel");
            classes.add("java.nio.channels.CancelledKeyException");
            classes.add("java.nio.channels.Channel");
            classes.add("java.nio.channels.Channels");
            classes.add("java.nio.channels.ClosedByInterruptException");
            classes.add("java.nio.channels.ClosedChannelException");
            classes.add("java.nio.channels.ClosedSelectorException");
            classes.add("java.nio.channels.ConnectionPendingException");
            classes.add("java.nio.channels.DatagramChannel");
            classes.add("java.nio.channels.FileChannel");
            classes.add("java.nio.channels.FileLock");
            classes.add("java.nio.channels.FileLockInterruptionException");
            classes.add("java.nio.channels.GatheringByteChannel");
            classes.add("java.nio.channels.IllegalBlockingModeException");
            classes.add("java.nio.channels.IllegalSelectorException");
            classes.add("java.nio.channels.InterruptibleChannel");
            classes.add("java.nio.channels.NoConnectionPendingException");
            classes.add("java.nio.channels.NonReadableChannelException");
            classes.add("java.nio.channels.NonWritableChannelException");
            classes.add("java.nio.channels.NotYetBoundException");
            classes.add("java.nio.channels.NotYetConnectedException");
            classes.add("java.nio.channels.OverlappingFileLockException");
            classes.add("java.nio.channels.Pipe");
            classes.add("java.nio.channels.ReadableByteChannel");
            classes.add("java.nio.channels.ScatteringByteChannel");
            classes.add("java.nio.channels.SelectableChannel");
            classes.add("java.nio.channels.SelectionKey");
            classes.add("java.nio.channels.Selector");
            classes.add("java.nio.channels.ServerSocketChannel");
            classes.add("java.nio.channels.SocketChannel");
            classes.add("java.nio.channels.spi.AbstractInterruptibleChannel");
            classes.add("java.nio.channels.spi.AbstractSelectableChannel");
            classes.add("java.nio.channels.spi.AbstractSelectionKey");
            classes.add("java.nio.channels.spi.AbstractSelector");
            classes.add("java.nio.channels.spi.SelectorProvider");
            classes.add("java.nio.channels.UnresolvedAddressException");
            classes.add("java.nio.channels.UnsupportedAddressTypeException");
            classes.add("java.nio.channels.WritableByteChannel");
            classes.add("java.nio.CharBuffer");
            classes.add("java.nio.charset.CharacterCodingException");
            classes.add("java.nio.charset.Charset");
            classes.add("java.nio.charset.CharsetDecoder");
            classes.add("java.nio.charset.CharsetEncoder");
            classes.add("java.nio.charset.CoderMalfunctionError");
            classes.add("java.nio.charset.CoderResult");
            classes.add("java.nio.charset.CodingErrorAction");
            classes.add("java.nio.charset.IllegalCharsetNameException");
            classes.add("java.nio.charset.MalformedInputException");
            classes.add("java.nio.charset.spi.CharsetProvider");
            classes.add("java.nio.charset.UnmappableCharacterException");
            classes.add("java.nio.charset.UnsupportedCharsetException");
            classes.add("java.nio.DirectByteBuffer");
            classes.add("java.nio.DirectByteBufferR");
            classes.add("java.nio.DirectCharBufferRS");
            classes.add("java.nio.DirectCharBufferRU");
            classes.add("java.nio.DirectCharBufferS");
            classes.add("java.nio.DirectCharBufferU");
            classes.add("java.nio.DirectDoubleBufferRS");
            classes.add("java.nio.DirectDoubleBufferRU");
            classes.add("java.nio.DirectDoubleBufferS");
            classes.add("java.nio.DirectDoubleBufferU");
            classes.add("java.nio.DirectFloatBufferRS");
            classes.add("java.nio.DirectFloatBufferRU");
            classes.add("java.nio.DirectFloatBufferS");
            classes.add("java.nio.DirectFloatBufferU");
            classes.add("java.nio.DirectIntBufferRS");
            classes.add("java.nio.DirectIntBufferRU");
            classes.add("java.nio.DirectIntBufferS");
            classes.add("java.nio.DirectIntBufferU");
            classes.add("java.nio.DirectLongBufferRS");
            classes.add("java.nio.DirectLongBufferRU");
            classes.add("java.nio.DirectLongBufferS");
            classes.add("java.nio.DirectLongBufferU");
            classes.add("java.nio.DirectShortBufferRS");
            classes.add("java.nio.DirectShortBufferRU");
            classes.add("java.nio.DirectShortBufferS");
            classes.add("java.nio.DirectShortBufferU");
            classes.add("java.nio.DoubleBuffer");
            classes.add("java.nio.FloatBuffer");
            classes.add("java.nio.HeapByteBuffer");
            classes.add("java.nio.HeapByteBufferR");
            classes.add("java.nio.HeapCharBuffer");
            classes.add("java.nio.HeapCharBufferR");
            classes.add("java.nio.HeapDoubleBuffer");
            classes.add("java.nio.HeapDoubleBufferR");
            classes.add("java.nio.HeapFloatBuffer");
            classes.add("java.nio.HeapFloatBufferR");
            classes.add("java.nio.HeapIntBuffer");
            classes.add("java.nio.HeapIntBufferR");
            classes.add("java.nio.HeapLongBuffer");
            classes.add("java.nio.HeapLongBufferR");
            classes.add("java.nio.HeapShortBuffer");
            classes.add("java.nio.HeapShortBufferR");
            classes.add("java.nio.IntBuffer");
            classes.add("java.nio.InvalidMarkException");
            classes.add("java.nio.LongBuffer");
            classes.add("java.nio.MappedByteBuffer");
            classes.add("java.nio.ReadOnlyBufferException");
            classes.add("java.nio.ShortBuffer");
            classes.add("java.nio.StringCharBuffer");
            classes.add("java.rmi.AccessException");
            classes.add("java.rmi.activation.Activatable");
            classes.add("java.rmi.activation.ActivateFailedException");
            classes.add("java.rmi.activation.ActivationDesc");
            classes.add("java.rmi.activation.ActivationException");
            classes.add("java.rmi.activation.ActivationGroup");
            classes.add("java.rmi.activation.ActivationGroupDesc");
            classes.add("java.rmi.activation.ActivationGroupID");
            classes.add("java.rmi.activation.ActivationGroup_Stub");
            classes.add("java.rmi.activation.ActivationID");
            classes.add("java.rmi.activation.ActivationInstantiator");
            classes.add("java.rmi.activation.ActivationMonitor");
            classes.add("java.rmi.activation.ActivationSystem");
            classes.add("java.rmi.activation.Activator");
            classes.add("java.rmi.activation.UnknownGroupException");
            classes.add("java.rmi.activation.UnknownObjectException");
            classes.add("java.rmi.AlreadyBoundException");
            classes.add("java.rmi.ConnectException");
            classes.add("java.rmi.ConnectIOException");
            classes.add("java.rmi.dgc.DGC");
            classes.add("java.rmi.dgc.Lease");
            classes.add("java.rmi.dgc.VMID");
            classes.add("java.rmi.MarshalException");
            classes.add("java.rmi.MarshalledObject");
            classes.add("java.rmi.Naming");
            classes.add("java.rmi.NoSuchObjectException");
            classes.add("java.rmi.NotBoundException");
            classes.add("java.rmi.registry.LocateRegistry");
            classes.add("java.rmi.registry.Registry");
            classes.add("java.rmi.registry.RegistryHandler");
            classes.add("java.rmi.Remote");
            classes.add("java.rmi.RemoteException");
            classes.add("java.rmi.RMISecurityException");
            classes.add("java.rmi.RMISecurityManager");
            classes.add("java.rmi.server.ExportException");
            classes.add("java.rmi.server.LoaderHandler");
            classes.add("java.rmi.server.LogStream");
            classes.add("java.rmi.server.ObjID");
            classes.add("java.rmi.server.Operation");
            classes.add("java.rmi.server.RemoteCall");
            classes.add("java.rmi.server.RemoteObject");
            classes.add("java.rmi.server.RemoteObjectInvocationHandler");
            classes.add("java.rmi.server.RemoteRef");
            classes.add("java.rmi.server.RemoteServer");
            classes.add("java.rmi.server.RemoteStub");
            classes.add("java.rmi.server.RMIClassLoader");
            classes.add("java.rmi.server.RMIClassLoaderSpi");
            classes.add("java.rmi.server.RMIClientSocketFactory");
            classes.add("java.rmi.server.RMIFailureHandler");
            classes.add("java.rmi.server.RMIServerSocketFactory");
            classes.add("java.rmi.server.RMISocketFactory");
            classes.add("java.rmi.server.ServerCloneException");
            classes.add("java.rmi.server.ServerNotActiveException");
            classes.add("java.rmi.server.ServerRef");
            classes.add("java.rmi.server.Skeleton");
            classes.add("java.rmi.server.SkeletonMismatchException");
            classes.add("java.rmi.server.SkeletonNotFoundException");
            classes.add("java.rmi.server.SocketSecurityException");
            classes.add("java.rmi.server.UID");
            classes.add("java.rmi.server.UnicastRemoteObject");
            classes.add("java.rmi.server.Unreferenced");
            classes.add("java.rmi.ServerError");
            classes.add("java.rmi.ServerException");
            classes.add("java.rmi.ServerRuntimeException");
            classes.add("java.rmi.StubNotFoundException");
            classes.add("java.rmi.UnexpectedException");
            classes.add("java.rmi.UnknownHostException");
            classes.add("java.rmi.UnmarshalException");
            classes.add("java.security.AccessControlContext");
            classes.add("java.security.AccessControlException");
            classes.add("java.security.AccessController");
            classes.add("java.security.acl.Acl");
            classes.add("java.security.acl.AclEntry");
            classes.add("java.security.acl.AclNotFoundException");
            classes.add("java.security.acl.Group");
            classes.add("java.security.acl.LastOwnerException");
            classes.add("java.security.acl.NotOwnerException");
            classes.add("java.security.acl.Owner");
            classes.add("java.security.acl.Permission");
            classes.add("java.security.AlgorithmParameterGenerator");
            classes.add("java.security.AlgorithmParameterGeneratorSpi");
            classes.add("java.security.AlgorithmParameters");
            classes.add("java.security.AlgorithmParametersSpi");
            classes.add("java.security.AllPermission");
            classes.add("java.security.AllPermissionCollection");
            classes.add("java.security.AuthProvider");
            classes.add("java.security.BasicPermission");
            classes.add("java.security.BasicPermissionCollection");
            classes.add("java.security.cert.Certificate");
            classes.add("java.security.cert.CertificateEncodingException");
            classes.add("java.security.cert.CertificateException");
            classes.add("java.security.cert.CertificateExpiredException");
            classes.add("java.security.cert.CertificateFactory");
            classes.add("java.security.cert.CertificateFactorySpi");
            classes.add("java.security.cert.CertificateNotYetValidException");
            classes.add("java.security.cert.CertificateParsingException");
            classes.add("java.security.cert.CertPathBuilder");
            classes.add("java.security.cert.CertPathBuilderException");
            classes.add("java.security.cert.CertPathBuilderResult");
            classes.add("java.security.cert.CertPathBuilderSpi");
            classes.add("java.security.cert.CertPath");
            classes.add("java.security.cert.CertPathHelperImpl");
            classes.add("java.security.cert.CertPathParameters");
            classes.add("java.security.cert.CertPathValidator");
            classes.add("java.security.cert.CertPathValidatorException");
            classes.add("java.security.cert.CertPathValidatorResult");
            classes.add("java.security.cert.CertPathValidatorSpi");
            classes.add("java.security.cert.CertSelector");
            classes.add("java.security.cert.CertStore");
            classes.add("java.security.cert.CertStoreException");
            classes.add("java.security.cert.CertStoreParameters");
            classes.add("java.security.cert.CertStoreSpi");
            classes.add("java.security.cert.CollectionCertStoreParameters");
            classes.add("java.security.cert.CRL");
            classes.add("java.security.cert.CRLException");
            classes.add("java.security.cert.CRLSelector");
            classes.add("java.security.cert.LDAPCertStoreParameters");
            classes.add("java.security.cert.PKIXBuilderParameters");
            classes.add("java.security.cert.PKIXCertPathBuilderResult");
            classes.add("java.security.cert.PKIXCertPathChecker");
            classes.add("java.security.cert.PKIXCertPathValidatorResult");
            classes.add("java.security.cert.PKIXParameters");
            classes.add("java.security.cert.PolicyNode");
            classes.add("java.security.cert.PolicyQualifierInfo");
            classes.add("java.security.cert.TrustAnchor");
            classes.add("java.security.cert.X509Certificate");
            classes.add("java.security.cert.X509CertSelector");
            classes.add("java.security.cert.X509CRL");
            classes.add("java.security.cert.X509CRLEntry");
            classes.add("java.security.cert.X509CRLSelector");
            classes.add("java.security.cert.X509Extension");
            classes.add("java.security.Certificate");
            classes.add("java.security.CodeSigner");
            classes.add("java.security.CodeSource");
            classes.add("java.security.DigestException");
            classes.add("java.security.DigestInputStream");
            classes.add("java.security.DigestOutputStream");
            classes.add("java.security.DomainCombiner");
            classes.add("java.security.GeneralSecurityException");
            classes.add("java.security.Guard");
            classes.add("java.security.GuardedObject");
            classes.add("java.security.Identity");
            classes.add("java.security.IdentityScope");
            classes.add("java.security.interfaces.DSAKey");
            classes.add("java.security.interfaces.DSAKeyPairGenerator");
            classes.add("java.security.interfaces.DSAParams");
            classes.add("java.security.interfaces.DSAPrivateKey");
            classes.add("java.security.interfaces.DSAPublicKey");
            classes.add("java.security.interfaces.ECKey");
            classes.add("java.security.interfaces.ECPrivateKey");
            classes.add("java.security.interfaces.ECPublicKey");
            classes.add("java.security.interfaces.RSAKey");
            classes.add("java.security.interfaces.RSAMultiPrimePrivateCrtKey");
            classes.add("java.security.interfaces.RSAPrivateCrtKey");
            classes.add("java.security.interfaces.RSAPrivateKey");
            classes.add("java.security.interfaces.RSAPublicKey");
            classes.add("java.security.InvalidAlgorithmParameterException");
            classes.add("java.security.InvalidKeyException");
            classes.add("java.security.InvalidParameterException");
            classes.add("java.security.Key");
            classes.add("java.security.KeyException");
            classes.add("java.security.KeyFactory");
            classes.add("java.security.KeyFactorySpi");
            classes.add("java.security.KeyManagementException");
            classes.add("java.security.KeyPair");
            classes.add("java.security.KeyPairGenerator");
            classes.add("java.security.KeyPairGeneratorSpi");
            classes.add("java.security.KeyRep");
            classes.add("java.security.KeyStore");
            classes.add("java.security.KeyStoreException");
            classes.add("java.security.KeyStoreSpi");
            classes.add("java.security.MessageDigest");
            classes.add("java.security.MessageDigestSpi");
            classes.add("java.security.NoSuchAlgorithmException");
            classes.add("java.security.NoSuchProviderException");
            classes.add("java.security.Permission");
            classes.add("java.security.PermissionCollection");
            classes.add("java.security.Permissions");
            classes.add("java.security.PermissionsEnumerator");
            classes.add("java.security.PermissionsHash");
            classes.add("java.security.Policy");
            classes.add("java.security.PolicySpi");
            classes.add("java.security.Principal");
            classes.add("java.security.PrivateKey");
            classes.add("java.security.PrivilegedAction");
            classes.add("java.security.PrivilegedActionException");
            classes.add("java.security.PrivilegedExceptionAction");
            classes.add("java.security.ProtectionDomain");
            classes.add("java.security.Provider");
            classes.add("java.security.ProviderException");
            classes.add("java.security.PublicKey");
            classes.add("java.security.SecureClassLoader");
            classes.add("java.security.SecureRandom");
            classes.add("java.security.SecureRandomSpi");
            classes.add("java.security.Security");
            classes.add("java.security.SecurityPermission");
            classes.add("java.security.Signature");
            classes.add("java.security.SignatureException");
            classes.add("java.security.SignatureSpi");
            classes.add("java.security.SignedObject");
            classes.add("java.security.Signer");
            classes.add("java.security.spec.AlgorithmParameterSpec");
            classes.add("java.security.spec.DSAParameterSpec");
            classes.add("java.security.spec.DSAPrivateKeySpec");
            classes.add("java.security.spec.DSAPublicKeySpec");
            classes.add("java.security.spec.ECField");
            classes.add("java.security.spec.ECFieldF2m");
            classes.add("java.security.spec.ECFieldFp");
            classes.add("java.security.spec.ECGenParameterSpec");
            classes.add("java.security.spec.ECParameterSpec");
            classes.add("java.security.spec.ECPoint");
            classes.add("java.security.spec.ECPrivateKeySpec");
            classes.add("java.security.spec.ECPublicKeySpec");
            classes.add("java.security.spec.EllipticCurve");
            classes.add("java.security.spec.EncodedKeySpec");
            classes.add("java.security.spec.InvalidKeySpecException");
            classes.add("java.security.spec.InvalidParameterSpecException");
            classes.add("java.security.spec.KeySpec");
            classes.add("java.security.spec.MGF1ParameterSpec");
            classes.add("java.security.spec.PKCS8EncodedKeySpec");
            classes.add("java.security.spec.PSSParameterSpec");
            classes.add("java.security.spec.RSAKeyGenParameterSpec");
            classes.add("java.security.spec.RSAMultiPrimePrivateCrtKeySpec");
            classes.add("java.security.spec.RSAOtherPrimeInfo");
            classes.add("java.security.spec.RSAPrivateCrtKeySpec");
            classes.add("java.security.spec.RSAPrivateKeySpec");
            classes.add("java.security.spec.RSAPublicKeySpec");
            classes.add("java.security.spec.X509EncodedKeySpec");
            classes.add("java.security.Timestamp");
            classes.add("java.security.UnrecoverableEntryException");
            classes.add("java.security.UnrecoverableKeyException");
            classes.add("java.security.UnresolvedPermission");
            classes.add("java.security.UnresolvedPermissionCollection");
            classes.add("java.security.URIParameter");
            classes.add("java.sql.Array");
            classes.add("java.sql.BatchUpdateException");
            classes.add("java.sql.Blob");
            classes.add("java.sql.CallableStatement");
            classes.add("java.sql.ClientInfoStatus");
            classes.add("java.sql.Clob");
            classes.add("java.sql.Connection");
            classes.add("java.sql.DatabaseMetaData");
            classes.add("java.sql.DataTruncation");
            classes.add("java.sql.Date");
            classes.add("java.sql.Driver");
            classes.add("java.sql.DriverInfo");
            classes.add("java.sql.DriverManager");
            classes.add("java.sql.DriverPropertyInfo");
            classes.add("java.sql.DriverService");
            classes.add("java.sql.NClob");
            classes.add("java.sql.ParameterMetaData");
            classes.add("java.sql.PreparedStatement");
            classes.add("java.sql.Ref");
            classes.add("java.sql.ResultSet");
            classes.add("java.sql.ResultSetMetaData");
            classes.add("java.sql.RowId");
            classes.add("java.sql.RowIdLifetime");
            classes.add("java.sql.Savepoint");
            classes.add("java.sql.SQLClientInfoException");
            classes.add("java.sql.SQLData");
            classes.add("java.sql.SQLDataException");
            classes.add("java.sql.SQLException");
            classes.add("java.sql.SQLFeatureNotSupportedException");
            classes.add("java.sql.SQLInput");
            classes.add("java.sql.SQLIntegrityConstraintViolationException");
            classes.add("java.sql.SQLInvalidAuthorizationSpecException");
            classes.add("java.sql.SQLNonTransientConnectionException");
            classes.add("java.sql.SQLNonTransientException");
            classes.add("java.sql.SQLOutput");
            classes.add("java.sql.SQLPermission");
            classes.add("java.sql.SQLRecoverableException");
            classes.add("java.sql.SQLSyntaxErrorException");
            classes.add("java.sql.SQLTimeoutException");
            classes.add("java.sql.SQLTransactionRollbackException");
            classes.add("java.sql.SQLTransientConnectionException");
            classes.add("java.sql.SQLTransientException");
            classes.add("java.sql.SQLWarning");
            classes.add("java.sql.SQLXML");
            classes.add("java.sql.Statement");
            classes.add("java.sql.Struct");
            classes.add("java.sql.Time");
            classes.add("java.sql.Timestamp");
            classes.add("java.sql.Types");
            classes.add("java.sql.Wrapper");
            classes.add("java.text.Annotation");
            classes.add("java.text.AttributedCharacterIterator");
            classes.add("java.text.AttributedString");
            classes.add("java.text.AttributeEntry");
            classes.add("java.text.Bidi");
            classes.add("java.text.BreakDictionary");
            classes.add("java.text.BreakIterator");
            classes.add("java.text.CharacterIterator");
            classes.add("java.text.CharacterIteratorFieldDelegate");
            classes.add("java.text.ChoiceFormat");
            classes.add("java.text.CollationElementIterator");
            classes.add("java.text.CollationKey");
            classes.add("java.text.CollationRules");
            classes.add("java.text.Collator");
            classes.add("java.text.DateFormat");
            classes.add("java.text.DateFormatSymbols");
            classes.add("java.text.DecimalFormat");
            classes.add("java.text.DecimalFormatSymbols");
            classes.add("java.text.DictionaryBasedBreakIterator");
            classes.add("java.text.DigitList");
            classes.add("java.text.DontCareFieldPosition");
            classes.add("java.text.EntryPair");
            classes.add("java.text.FieldPosition");
            classes.add("java.text.Format");
            classes.add("java.text.MergeCollation");
            classes.add("java.text.MessageFormat");
            classes.add("java.text.Normalizer");
            classes.add("java.text.NumberFormat");
            classes.add("java.text.ParseException");
            classes.add("java.text.ParsePosition");
            classes.add("java.text.PatternEntry");
            classes.add("java.text.RBCollationTables");
            classes.add("java.text.RBTableBuilder");
            classes.add("java.text.RuleBasedBreakIterator");
            classes.add("java.text.RuleBasedCollationKey");
            classes.add("java.text.RuleBasedCollator");
            classes.add("java.text.SimpleDateFormat");
            classes.add("java.text.spi.BreakIteratorProvider");
            classes.add("java.text.spi.CollatorProvider");
            classes.add("java.text.spi.DateFormatProvider");
            classes.add("java.text.spi.DateFormatSymbolsProvider");
            classes.add("java.text.spi.DecimalFormatSymbolsProvider");
            classes.add("java.text.spi.NumberFormatProvider");
            classes.add("java.text.StringCharacterIterator");
            classes.add("java.util.AbstractCollection");
            classes.add("java.util.AbstractList");
            classes.add("java.util.AbstractMap");
            classes.add("java.util.AbstractQueue");
            classes.add("java.util.AbstractSequentialList");
            classes.add("java.util.AbstractSet");
            classes.add("java.util.ArrayDeque");
            classes.add("java.util.ArrayList");
            classes.add("java.util.Arrays");
            classes.add("java.util.BitSet");
            classes.add("java.util.Calendar");
            classes.add("java.util.Collection");
            classes.add("java.util.Collections");
            classes.add("java.util.Comparator");
            classes.add("java.util.concurrent.AbstractExecutorService");
            classes.add("java.util.concurrent.ArrayBlockingQueue");
            classes.add("java.util.concurrent.atomic.AtomicBoolean");
            classes.add("java.util.concurrent.atomic.AtomicIntegerArray");
            classes.add("java.util.concurrent.atomic.AtomicInteger");
            classes.add("java.util.concurrent.atomic.AtomicIntegerFieldUpdater");
            classes.add("java.util.concurrent.atomic.AtomicLongArray");
            classes.add("java.util.concurrent.atomic.AtomicLong");
            classes.add("java.util.concurrent.atomic.AtomicLongFieldUpdater");
            classes.add("java.util.concurrent.atomic.AtomicMarkableReference");
            classes.add("java.util.concurrent.atomic.AtomicReferenceArray");
            classes.add("java.util.concurrent.atomic.AtomicReference");
            classes.add("java.util.concurrent.atomic.AtomicReferenceFieldUpdater");
            classes.add("java.util.concurrent.atomic.AtomicStampedReference");
            classes.add("java.util.concurrent.BlockingDeque");
            classes.add("java.util.concurrent.BlockingQueue");
            classes.add("java.util.concurrent.BrokenBarrierException");
            classes.add("java.util.concurrent.Callable");
            classes.add("java.util.concurrent.CancellationException");
            classes.add("java.util.concurrent.CompletionService");
            classes.add("java.util.concurrent.ConcurrentHashMap");
            classes.add("java.util.concurrent.ConcurrentLinkedQueue");
            classes.add("java.util.concurrent.ConcurrentMap");
            classes.add("java.util.concurrent.ConcurrentNavigableMap");
            classes.add("java.util.concurrent.ConcurrentSkipListMap");
            classes.add("java.util.concurrent.ConcurrentSkipListSet");
            classes.add("java.util.concurrent.CopyOnWriteArrayList");
            classes.add("java.util.concurrent.CopyOnWriteArraySet");
            classes.add("java.util.concurrent.CountDownLatch");
            classes.add("java.util.concurrent.CyclicBarrier");
            classes.add("java.util.concurrent.Delayed");
            classes.add("java.util.concurrent.DelayQueue");
            classes.add("java.util.concurrent.Exchanger");
            classes.add("java.util.concurrent.ExecutionException");
            classes.add("java.util.concurrent.Executor");
            classes.add("java.util.concurrent.ExecutorCompletionService");
            classes.add("java.util.concurrent.Executors");
            classes.add("java.util.concurrent.ExecutorService");
            classes.add("java.util.concurrent.Future");
            classes.add("java.util.concurrent.FutureTask");
            classes.add("java.util.concurrent.LinkedBlockingDeque");
            classes.add("java.util.concurrent.LinkedBlockingQueue");
            classes.add("java.util.concurrent.locks.AbstractOwnableSynchronizer");
            classes.add("java.util.concurrent.locks.AbstractQueuedLongSynchronizer");
            classes.add("java.util.concurrent.locks.AbstractQueuedSynchronizer");
            classes.add("java.util.concurrent.locks.Condition");
            classes.add("java.util.concurrent.locks.Lock");
            classes.add("java.util.concurrent.locks.LockSupport");
            classes.add("java.util.concurrent.locks.ReadWriteLock");
            classes.add("java.util.concurrent.locks.ReentrantLock");
            classes.add("java.util.concurrent.locks.ReentrantReadWriteLock");
            classes.add("java.util.concurrent.PriorityBlockingQueue");
            classes.add("java.util.concurrent.RejectedExecutionException");
            classes.add("java.util.concurrent.RejectedExecutionHandler");
            classes.add("java.util.concurrent.RunnableFuture");
            classes.add("java.util.concurrent.RunnableScheduledFuture");
            classes.add("java.util.concurrent.ScheduledExecutorService");
            classes.add("java.util.concurrent.ScheduledFuture");
            classes.add("java.util.concurrent.ScheduledThreadPoolExecutor");
            classes.add("java.util.concurrent.Semaphore");
            classes.add("java.util.concurrent.SynchronousQueue");
            classes.add("java.util.concurrent.ThreadFactory");
            classes.add("java.util.concurrent.ThreadPoolExecutor");
            classes.add("java.util.concurrent.TimeoutException");
            classes.add("java.util.concurrent.TimeUnit");
            classes.add("java.util.ConcurrentModificationException");
            classes.add("java.util.Currency");
            classes.add("java.util.CurrencyData");
            classes.add("java.util.Date");
            classes.add("java.util.Deque");
            classes.add("java.util.Dictionary");
            classes.add("java.util.DuplicateFormatFlagsException");
            classes.add("java.util.EmptyStackException");
            classes.add("java.util.Enumeration");
            classes.add("java.util.EnumMap");
            classes.add("java.util.EnumSet");
            classes.add("java.util.EventListener");
            classes.add("java.util.EventListenerProxy");
            classes.add("java.util.EventObject");
            classes.add("java.util.FormatFlagsConversionMismatchException");
            classes.add("java.util.Formattable");
            classes.add("java.util.FormattableFlags");
            classes.add("java.util.Formatter");
            classes.add("java.util.FormatterClosedException");
            classes.add("java.util.GregorianCalendar");
            classes.add("java.util.HashMap");
            classes.add("java.util.HashSet");
            classes.add("java.util.Hashtable");
            classes.add("java.util.IdentityHashMap");
            classes.add("java.util.IllegalFormatCodePointException");
            classes.add("java.util.IllegalFormatConversionException");
            classes.add("java.util.IllegalFormatException");
            classes.add("java.util.IllegalFormatFlagsException");
            classes.add("java.util.IllegalFormatPrecisionException");
            classes.add("java.util.IllegalFormatWidthException");
            classes.add("java.util.InputMismatchException");
            classes.add("java.util.InvalidPropertiesFormatException");
            classes.add("java.util.Iterator");
            classes.add("java.util.JapaneseImperialCalendar");
            classes.add("java.util.jar.Attributes");
            classes.add("java.util.jar.JarEntry");
            classes.add("java.util.jar.JarException");
            classes.add("java.util.jar.JarFile");
            classes.add("java.util.jar.JarInputStream");
            classes.add("java.util.jar.JarOutputStream");
            classes.add("java.util.jar.JarVerifier");
            classes.add("java.util.jar.JavaUtilJarAccessImpl");
            classes.add("java.util.jar.Manifest");
            classes.add("java.util.jar.Pack200");
            classes.add("java.util.JumboEnumSet");
            classes.add("java.util.LinkedHashMap");
            classes.add("java.util.LinkedHashSet");
            classes.add("java.util.LinkedList");
            classes.add("java.util.List");
            classes.add("java.util.ListIterator");
            classes.add("java.util.ListResourceBundle");
            classes.add("java.util.Locale");
            classes.add("java.util.LocaleISOData");
            classes.add("java.util.logging.ConsoleHandler");
            classes.add("java.util.logging.ErrorManager");
            classes.add("java.util.logging.FileHandler");
            classes.add("java.util.logging.Filter");
            classes.add("java.util.logging.Formatter");
            classes.add("java.util.logging.Handler");
            classes.add("java.util.logging.Level");
            classes.add("java.util.logging.Logger");
            classes.add("java.util.logging.Logging");
            classes.add("java.util.logging.LoggingMXBean");
            classes.add("java.util.logging.LoggingPermission");
            classes.add("java.util.logging.LogManager");
            classes.add("java.util.logging.LogRecord");
            classes.add("java.util.logging.MemoryHandler");
            classes.add("java.util.logging.SimpleFormatter");
            classes.add("java.util.logging.SocketHandler");
            classes.add("java.util.logging.StreamHandler");
            classes.add("java.util.logging.XMLFormatter");
            classes.add("java.util.Map");
            classes.add("java.util.MissingFormatArgumentException");
            classes.add("java.util.MissingFormatWidthException");
            classes.add("java.util.MissingResourceException");
            classes.add("java.util.NavigableMap");
            classes.add("java.util.NavigableSet");
            classes.add("java.util.NoSuchElementException");
            classes.add("java.util.Observable");
            classes.add("java.util.Observer");
            classes.add("java.util.prefs.AbstractPreferences");
            classes.add("java.util.prefs.BackingStoreException");
            classes.add("java.util.prefs.Base64");
            classes.add("java.util.prefs.FileSystemPreferences");
            classes.add("java.util.prefs.FileSystemPreferencesFactory");
            classes.add("java.util.prefs.InvalidPreferencesFormatException");
            classes.add("java.util.prefs.NodeChangeEvent");
            classes.add("java.util.prefs.NodeChangeListener");
            classes.add("java.util.prefs.PreferenceChangeEvent");
            classes.add("java.util.prefs.PreferenceChangeListener");
            classes.add("java.util.prefs.Preferences");
            classes.add("java.util.prefs.PreferencesFactory");
            classes.add("java.util.prefs.XmlSupport");
            classes.add("java.util.PriorityQueue");
            classes.add("java.util.Properties");
            classes.add("java.util.PropertyPermission");
            classes.add("java.util.PropertyPermissionCollection");
            classes.add("java.util.PropertyResourceBundle");
            classes.add("java.util.Queue");
            classes.add("java.util.RandomAccess");
            classes.add("java.util.RandomAccessSubList");
            classes.add("java.util.Random");
            classes.add("java.util.regex.ASCII");
            classes.add("java.util.regex.Matcher");
            classes.add("java.util.regex.MatchResult");
            classes.add("java.util.regex.Pattern");
            classes.add("java.util.regex.PatternSyntaxException");
            classes.add("java.util.RegularEnumSet");
            classes.add("java.util.ResourceBundle");
            classes.add("java.util.Scanner");
            classes.add("java.util.ServiceConfigurationError");
            classes.add("java.util.ServiceLoader");
            classes.add("java.util.Set");
            classes.add("java.util.SimpleTimeZone");
            classes.add("java.util.SortedMap");
            classes.add("java.util.SortedSet");
            classes.add("java.util.spi.CurrencyNameProvider");
            classes.add("java.util.spi.LocaleNameProvider");
            classes.add("java.util.spi.LocaleServiceProvider");
            classes.add("java.util.spi.TimeZoneNameProvider");
            classes.add("java.util.Stack");
            classes.add("java.util.StringTokenizer");
            classes.add("java.util.SubList");
            classes.add("java.util.TaskQueue");
            classes.add("java.util.Timer");
            classes.add("java.util.TimerTask");
            classes.add("java.util.TimerThread");
            classes.add("java.util.TimeZone");
            classes.add("java.util.TooManyListenersException");
            classes.add("java.util.TreeMap");
            classes.add("java.util.TreeSet");
            classes.add("java.util.UnknownFormatConversionException");
            classes.add("java.util.UnknownFormatFlagsException");
            classes.add("java.util.UUID");
            classes.add("java.util.Vector");
            classes.add("java.util.WeakHashMap");
            classes.add("java.util.XMLUtils");
            classes.add("java.util.zip.Adler32");
            classes.add("java.util.zip.CheckedInputStream");
            classes.add("java.util.zip.CheckedOutputStream");
            classes.add("java.util.zip.Checksum");
            classes.add("java.util.zip.CRC32");
            classes.add("java.util.zip.DataFormatException");
            classes.add("java.util.zip.Deflater");
            classes.add("java.util.zip.DeflaterInputStream");
            classes.add("java.util.zip.DeflaterOutputStream");
            classes.add("java.util.zip.GZIPInputStream");
            classes.add("java.util.zip.GZIPOutputStream");
            classes.add("java.util.zip.Inflater");
            classes.add("java.util.zip.InflaterInputStream");
            classes.add("java.util.zip.InflaterOutputStream");
            classes.add("java.util.zip.ZipConstants");
            classes.add("java.util.zip.ZipEntry");
            classes.add("java.util.zip.ZipError");
            classes.add("java.util.zip.ZipException");
            classes.add("java.util.zip.ZipFile");
            classes.add("java.util.zip.ZipInputStream");
            classes.add("java.util.zip.ZipOutputStream");
            classes.add("java.util.zip.ZStreamRef");
        }
        return classes;
    }
}
